{"list":[{"title":"AABB","link":"<a href=\"AABB.html\">AABB</a>","description":"<p>Axix Aligned Bounding Box or AABB is a rectangle that is used to detect collisions.</p>"},{"title":"Application","link":"<a href=\"Application.html\">Application</a>","description":"<p>The main class of the engine. Inherit from this class to create your own game.</p>"},{"title":"Application#Draw","link":"<a href=\"Application.html#Draw\">Application &rtrif; Draw</a>"},{"title":"Application#Init","link":"<a href=\"Application.html#Init\">Application &rtrif; Init</a>"},{"title":"Application#Update","link":"<a href=\"Application.html#Update\">Application &rtrif; Update</a>"},{"title":"BoxBody","link":"<a href=\"BoxBody.html\">BoxBody</a>","description":"<p>BoxBody is a Rectangle body.\nCollisionShape of this body is a Polygon.</p>"},{"title":"BoxBody#addForce","link":"<a href=\"BoxBody.html#addForce\">BoxBody &rtrif; addForce</a>"},{"title":"BoxBody#addImpulse","link":"<a href=\"BoxBody.html#addImpulse\">BoxBody &rtrif; addImpulse</a>"},{"title":"BoxBody#addTorque","link":"<a href=\"BoxBody.html#addTorque\">BoxBody &rtrif; addTorque</a>"},{"title":"BoxBody#addTorqueImpulse","link":"<a href=\"BoxBody.html#addTorqueImpulse\">BoxBody &rtrif; addTorqueImpulse</a>"},{"title":"BoxBody#getAABB","link":"<a href=\"BoxBody.html#getAABB\">BoxBody &rtrif; getAABB</a>"},{"title":"BoxBody#getTransformedVertices","link":"<a href=\"BoxBody.html#getTransformedVertices\">BoxBody &rtrif; getTransformedVertices</a>"},{"title":"BoxBody#move","link":"<a href=\"BoxBody.html#move\">BoxBody &rtrif; move</a>"},{"title":"BoxBody#moveAt","link":"<a href=\"BoxBody.html#moveAt\">BoxBody &rtrif; moveAt</a>"},{"title":"BoxBody#moveTowards","link":"<a href=\"BoxBody.html#moveTowards\">BoxBody &rtrif; moveTowards</a>"},{"title":"BoxBody#rotate","link":"<a href=\"BoxBody.html#rotate\">BoxBody &rtrif; rotate</a>"},{"title":"BoxBody#rotateAt","link":"<a href=\"BoxBody.html#rotateAt\">BoxBody &rtrif; rotateAt</a>"},{"title":"BoxBody#rotateTowards","link":"<a href=\"BoxBody.html#rotateTowards\">BoxBody &rtrif; rotateTowards</a>"},{"title":"BoxBody#Step","link":"<a href=\"BoxBody.html#Step\">BoxBody &rtrif; Step</a>"},{"title":"CircleBody","link":"<a href=\"CircleBody.html\">CircleBody</a>","description":"<p>CircleBody is a circle body. It enable to use circular collision detection.\nCollisionShape of this body is a Circle.</p>"},{"title":"CircleBody#addForce","link":"<a href=\"CircleBody.html#addForce\">CircleBody &rtrif; addForce</a>"},{"title":"CircleBody#addImpulse","link":"<a href=\"CircleBody.html#addImpulse\">CircleBody &rtrif; addImpulse</a>"},{"title":"CircleBody#addTorque","link":"<a href=\"CircleBody.html#addTorque\">CircleBody &rtrif; addTorque</a>"},{"title":"CircleBody#addTorqueImpulse","link":"<a href=\"CircleBody.html#addTorqueImpulse\">CircleBody &rtrif; addTorqueImpulse</a>"},{"title":"CircleBody#getAABB","link":"<a href=\"CircleBody.html#getAABB\">CircleBody &rtrif; getAABB</a>"},{"title":"CircleBody#getTransformedVertices","link":"<a href=\"CircleBody.html#getTransformedVertices\">CircleBody &rtrif; getTransformedVertices</a>"},{"title":"CircleBody#move","link":"<a href=\"CircleBody.html#move\">CircleBody &rtrif; move</a>"},{"title":"CircleBody#moveAt","link":"<a href=\"CircleBody.html#moveAt\">CircleBody &rtrif; moveAt</a>"},{"title":"CircleBody#moveTowards","link":"<a href=\"CircleBody.html#moveTowards\">CircleBody &rtrif; moveTowards</a>"},{"title":"CircleBody#rotate","link":"<a href=\"CircleBody.html#rotate\">CircleBody &rtrif; rotate</a>"},{"title":"CircleBody#rotateAt","link":"<a href=\"CircleBody.html#rotateAt\">CircleBody &rtrif; rotateAt</a>"},{"title":"CircleBody#rotateTowards","link":"<a href=\"CircleBody.html#rotateTowards\">CircleBody &rtrif; rotateTowards</a>"},{"title":"CircleBody#Step","link":"<a href=\"CircleBody.html#Step\">CircleBody &rtrif; Step</a>"},{"title":"Collision","link":"<a href=\"Collision.html\">Collision</a>","description":"<p>A Collision Manifold.\nIt contains the information related to a specific collision.</p>"},{"title":"CollisionDetection","link":"<a href=\"CollisionDetection.html\">CollisionDetection</a>","description":"<p>Collision Detection is used by the physics engine to detect the collisions.</p>"},{"title":"CollisionDetection.collide","link":"<a href=\"CollisionDetection.html#.collide\">CollisionDetection &rtrif; collide</a>"},{"title":"CollisionDetection.findContactPoints","link":"<a href=\"CollisionDetection.html#.findContactPoints\">CollisionDetection &rtrif; findContactPoints</a>"},{"title":"CollisionDetection.intersectAABB","link":"<a href=\"CollisionDetection.html#.intersectAABB\">CollisionDetection &rtrif; intersectAABB</a>"},{"title":"CollisionShape","link":"<a href=\"CollisionShape.html\">CollisionShape</a>","description":"<p>Collision Shapes are used by physics engine to calculate the collisions.\nCollisionShapes are used by the Body class.</p>"},{"title":"Color","link":"<a href=\"Color.html\">Color</a>"},{"title":"Color.fromHex","link":"<a href=\"Color.html#.fromHex\">Color &rtrif; fromHex</a>"},{"title":"Color.fromHSL","link":"<a href=\"Color.html#.fromHSL\">Color &rtrif; fromHSL</a>"},{"title":"Color.fromRGB","link":"<a href=\"Color.html#.fromRGB\">Color &rtrif; fromRGB</a>"},{"title":"Color.fromRGBA","link":"<a href=\"Color.html#.fromRGBA\">Color &rtrif; fromRGBA</a>"},{"title":"Color.random","link":"<a href=\"Color.html#.random\">Color &rtrif; random</a>"},{"title":"Color#toString","link":"<a href=\"Color.html#toString\">Color &rtrif; toString</a>"},{"title":"DestroyQueue","link":"<a href=\"DestroyQueue.html\">DestroyQueue</a>"},{"title":"DestroyQueue.add","link":"<a href=\"DestroyQueue.html#.add\">DestroyQueue &rtrif; add</a>","description":"<p>A queue of entities to be destroyed. This is used to prevent entities from being destroyed while they are being iterated over.</p>"},{"title":"DestroyQueue.Destroy","link":"<a href=\"DestroyQueue.html#.Destroy\">DestroyQueue &rtrif; Destroy</a>","description":"<p>A queue of entities to be destroyed. This is used to prevent entities from being destroyed while they are being iterated over.</p>"},{"title":"Entity","link":"<a href=\"Entity.html\">Entity</a>","description":"<p>An entity is a game object.\nAll the Objects in the game are entities.\nEntities can have components attached to them.\nEntities can have children entities, which can be used to create a hierarchy of entities.</p>"},{"title":"Entity#addChild","link":"<a href=\"Entity.html#addChild\">Entity &rtrif; addChild</a>"},{"title":"Entity#addComponent","link":"<a href=\"Entity.html#addComponent\">Entity &rtrif; addComponent</a>"},{"title":"Entity#Destroy","link":"<a href=\"Entity.html#Destroy\">Entity &rtrif; Destroy</a>"},{"title":"Entity#getChildrenWithComponent","link":"<a href=\"Entity.html#getChildrenWithComponent\">Entity &rtrif; getChildrenWithComponent</a>"},{"title":"Entity#getChildWithComponent","link":"<a href=\"Entity.html#getChildWithComponent\">Entity &rtrif; getChildWithComponent</a>"},{"title":"Entity#getComponent","link":"<a href=\"Entity.html#getComponent\">Entity &rtrif; getComponent</a>"},{"title":"Entity#getComponentinChildren","link":"<a href=\"Entity.html#getComponentinChildren\">Entity &rtrif; getComponentinChildren</a>"},{"title":"Entity#getComponentsInChildren","link":"<a href=\"Entity.html#getComponentsInChildren\">Entity &rtrif; getComponentsInChildren</a>"},{"title":"Entity#getTree","link":"<a href=\"Entity.html#getTree\">Entity &rtrif; getTree</a>"},{"title":"Entity#hasComponent","link":"<a href=\"Entity.html#hasComponent\">Entity &rtrif; hasComponent</a>"},{"title":"Entity#removeChild","link":"<a href=\"Entity.html#removeChild\">Entity &rtrif; removeChild</a>"},{"title":"Entity#removeComponent","link":"<a href=\"Entity.html#removeComponent\">Entity &rtrif; removeComponent</a>"},{"title":"GridContainer","link":"<a href=\"GridContainer.html\">GridContainer</a>","description":"<p>GridContainer is a container that arranges its children in a grid.</p>"},{"title":"GridContainer#Destroy","link":"<a href=\"GridContainer.html#Destroy\">GridContainer &rtrif; Destroy</a>"},{"title":"GridContainer#update","link":"<a href=\"GridContainer.html#update\">GridContainer &rtrif; update</a>"},{"title":"HBoxContainer","link":"<a href=\"HBoxContainer.html\">HBoxContainer</a>","description":"<p>Horizontal Box Container or HBoxContainer is a container that arranges its children horizontally.</p>"},{"title":"HBoxContainer#Destroy","link":"<a href=\"HBoxContainer.html#Destroy\">HBoxContainer &rtrif; Destroy</a>"},{"title":"HBoxContainer#update","link":"<a href=\"HBoxContainer.html#update\">HBoxContainer &rtrif; update</a>"},{"title":"Input","link":"<a href=\"Input.html\">Input</a>","description":"<p>Input class is used to get input from the user.\nIt allows mouse/keyboad input and touch input.\nUser doesn't need to add any event listeners to the canvas.\nInput is Initialized automatically when the game starts.</p>"},{"title":"Input.Clear","link":"<a href=\"Input.html#.Clear\">Input &rtrif; Clear</a>"},{"title":"Input.getPosition","link":"<a href=\"Input.html#.getPosition\">Input &rtrif; getPosition</a>"},{"title":"Input.getSpecialKeyPressed","link":"<a href=\"Input.html#.getSpecialKeyPressed\">Input &rtrif; getSpecialKeyPressed</a>"},{"title":"Input.getTouchCount","link":"<a href=\"Input.html#.getTouchCount\">Input &rtrif; getTouchCount</a>"},{"title":"Input.getWheelScroll","link":"<a href=\"Input.html#.getWheelScroll\">Input &rtrif; getWheelScroll</a>"},{"title":"Input.isKeyDown","link":"<a href=\"Input.html#.isKeyDown\">Input &rtrif; isKeyDown</a>"},{"title":"Input.isLeftClicked","link":"<a href=\"Input.html#.isLeftClicked\">Input &rtrif; isLeftClicked</a>"},{"title":"Input.isLeftPressed","link":"<a href=\"Input.html#.isLeftPressed\">Input &rtrif; isLeftPressed</a>"},{"title":"Input.isMiddleClicked","link":"<a href=\"Input.html#.isMiddleClicked\">Input &rtrif; isMiddleClicked</a>"},{"title":"Input.isMiddlePressed","link":"<a href=\"Input.html#.isMiddlePressed\">Input &rtrif; isMiddlePressed</a>"},{"title":"Input.isRightClicked","link":"<a href=\"Input.html#.isRightClicked\">Input &rtrif; isRightClicked</a>"},{"title":"Input.isRightPressed","link":"<a href=\"Input.html#.isRightPressed\">Input &rtrif; isRightPressed</a>"},{"title":"Input.leftMouseButtonDown","link":"<a href=\"Input.html#.leftMouseButtonDown\">Input &rtrif; leftMouseButtonDown</a>"},{"title":"Input.leftMouseButtonUp","link":"<a href=\"Input.html#.leftMouseButtonUp\">Input &rtrif; leftMouseButtonUp</a>"},{"title":"Input.middleMouseButtonDown","link":"<a href=\"Input.html#.middleMouseButtonDown\">Input &rtrif; middleMouseButtonDown</a>"},{"title":"Input.middleMouseButtonUp","link":"<a href=\"Input.html#.middleMouseButtonUp\">Input &rtrif; middleMouseButtonUp</a>"},{"title":"Input.rightMouseButtonDown","link":"<a href=\"Input.html#.rightMouseButtonDown\">Input &rtrif; rightMouseButtonDown</a>"},{"title":"Input.rightMouseButtonUp","link":"<a href=\"Input.html#.rightMouseButtonUp\">Input &rtrif; rightMouseButtonUp</a>"},{"title":"MarginContainer","link":"<a href=\"MarginContainer.html\">MarginContainer</a>","description":"<p>MarginContainer is a container that arranges its children with margins.\nNote: The margins are added to this container's UITransform component.</p>"},{"title":"MarginContainer#Destroy","link":"<a href=\"MarginContainer.html#Destroy\">MarginContainer &rtrif; Destroy</a>"},{"title":"MarginContainer#update","link":"<a href=\"MarginContainer.html#update\">MarginContainer &rtrif; update</a>"},{"title":"Maths","link":"<a href=\"Maths.html\">Maths</a>","description":"<p>A Math class containing useful math functions.\nThis class contains all the Mathamatical functions used by the engine.\nThis class is static and should not be instantiated.</p>"},{"title":"Maths.clamp","link":"<a href=\"Maths.html#.clamp\">Maths &rtrif; clamp</a>"},{"title":"Maths.cross","link":"<a href=\"Maths.html#.cross\">Maths &rtrif; cross</a>"},{"title":"Maths.distance","link":"<a href=\"Maths.html#.distance\">Maths &rtrif; distance</a>"},{"title":"Maths.distanceSq","link":"<a href=\"Maths.html#.distanceSq\">Maths &rtrif; distanceSq</a>"},{"title":"Maths.dot","link":"<a href=\"Maths.html#.dot\">Maths &rtrif; dot</a>"},{"title":"Maths.lenght","link":"<a href=\"Maths.html#.lenght\">Maths &rtrif; lenght</a>"},{"title":"Maths.lenghtSq","link":"<a href=\"Maths.html#.lenghtSq\">Maths &rtrif; lenghtSq</a>"},{"title":"Maths.meterToPixel","link":"<a href=\"Maths.html#.meterToPixel\">Maths &rtrif; meterToPixel</a>"},{"title":"Maths.meterToPixelVector2","link":"<a href=\"Maths.html#.meterToPixelVector2\">Maths &rtrif; meterToPixelVector2</a>"},{"title":"Maths.nearlyEqual","link":"<a href=\"Maths.html#.nearlyEqual\">Maths &rtrif; nearlyEqual</a>"},{"title":"Maths.normalize","link":"<a href=\"Maths.html#.normalize\">Maths &rtrif; normalize</a>"},{"title":"Maths.perpendicular","link":"<a href=\"Maths.html#.perpendicular\">Maths &rtrif; perpendicular</a>"},{"title":"Maths.pixelToMeter","link":"<a href=\"Maths.html#.pixelToMeter\">Maths &rtrif; pixelToMeter</a>"},{"title":"Maths.pixelToMeterVector2","link":"<a href=\"Maths.html#.pixelToMeterVector2\">Maths &rtrif; pixelToMeterVector2</a>"},{"title":"Maths.randomVector2","link":"<a href=\"Maths.html#.randomVector2\">Maths &rtrif; randomVector2</a>"},{"title":"Panel","link":"<a href=\"Panel.html\">Panel</a>","description":"<p>A flat color rectangle that can be used to display UI elements.\nThis is a UI component, so it should be added to an entity with a UITransform component.</p>"},{"title":"Panel#Destroy","link":"<a href=\"Panel.html#Destroy\">Panel &rtrif; Destroy</a>"},{"title":"Panel#draw","link":"<a href=\"Panel.html#draw\">Panel &rtrif; draw</a>"},{"title":"PhysicsEngine","link":"<a href=\"PhysicsEngine.html\">PhysicsEngine</a>","description":"<p>PhysicsEngine is the main class for the physics engine.\nAll the physics calculations are done here. All the bodies in the simulation are updated here.\nThis class is initialized in the engine and is used by the engine to update the physics.\nNo need to initialize this class manually and no need to call any of the methods manually.</p>"},{"title":"PhysicsEngine.addBody","link":"<a href=\"PhysicsEngine.html#.addBody\">PhysicsEngine &rtrif; addBody</a>"},{"title":"PhysicsEngine.getBody","link":"<a href=\"PhysicsEngine.html#.getBody\">PhysicsEngine &rtrif; getBody</a>"},{"title":"PhysicsEngine.getBodyCount","link":"<a href=\"PhysicsEngine.html#.getBodyCount\">PhysicsEngine &rtrif; getBodyCount</a>"},{"title":"PhysicsEngine.Init","link":"<a href=\"PhysicsEngine.html#.Init\">PhysicsEngine &rtrif; Init</a>"},{"title":"PhysicsEngine.removeBody","link":"<a href=\"PhysicsEngine.html#.removeBody\">PhysicsEngine &rtrif; removeBody</a>"},{"title":"PhysicsEngine.Step","link":"<a href=\"PhysicsEngine.html#.Step\">PhysicsEngine &rtrif; Step</a>"},{"title":"PhysicsTransform","link":"<a href=\"PhysicsTransform.html\">PhysicsTransform</a>","description":"<p>Physics Transform is not a component, but a class that is used to store the transformation data of the vectors.\nThis class is used by the physics engine to calculate the position and rotation of the rigid bodies.\nThis is a Manifold class.</p>"},{"title":"PhysicsTransform.zero","link":"<a href=\"PhysicsTransform.html#.zero\">PhysicsTransform &rtrif; zero</a>"},{"title":"Polygon","link":"<a href=\"Polygon.html\">Polygon</a>","description":"<p>A Polygon Component is responsible for rendering a polygon to the screen.\nPolygons are defined by an array of points.</p>"},{"title":"Polygon#draw","link":"<a href=\"Polygon.html#draw\">Polygon &rtrif; draw</a>"},{"title":"PolygonBody","link":"<a href=\"PolygonBody.html\">PolygonBody</a>","description":"<p>PolygonBody enables to use Convex polygon in the engine.</p>"},{"title":"PolygonBody#addForce","link":"<a href=\"PolygonBody.html#addForce\">PolygonBody &rtrif; addForce</a>"},{"title":"PolygonBody#addImpulse","link":"<a href=\"PolygonBody.html#addImpulse\">PolygonBody &rtrif; addImpulse</a>"},{"title":"PolygonBody#addTorque","link":"<a href=\"PolygonBody.html#addTorque\">PolygonBody &rtrif; addTorque</a>"},{"title":"PolygonBody#addTorqueImpulse","link":"<a href=\"PolygonBody.html#addTorqueImpulse\">PolygonBody &rtrif; addTorqueImpulse</a>"},{"title":"PolygonBody#getAABB","link":"<a href=\"PolygonBody.html#getAABB\">PolygonBody &rtrif; getAABB</a>"},{"title":"PolygonBody#getTransformedVertices","link":"<a href=\"PolygonBody.html#getTransformedVertices\">PolygonBody &rtrif; getTransformedVertices</a>"},{"title":"PolygonBody#move","link":"<a href=\"PolygonBody.html#move\">PolygonBody &rtrif; move</a>"},{"title":"PolygonBody#moveAt","link":"<a href=\"PolygonBody.html#moveAt\">PolygonBody &rtrif; moveAt</a>"},{"title":"PolygonBody#moveTowards","link":"<a href=\"PolygonBody.html#moveTowards\">PolygonBody &rtrif; moveTowards</a>"},{"title":"PolygonBody#rotate","link":"<a href=\"PolygonBody.html#rotate\">PolygonBody &rtrif; rotate</a>"},{"title":"PolygonBody#rotateAt","link":"<a href=\"PolygonBody.html#rotateAt\">PolygonBody &rtrif; rotateAt</a>"},{"title":"PolygonBody#rotateTowards","link":"<a href=\"PolygonBody.html#rotateTowards\">PolygonBody &rtrif; rotateTowards</a>"},{"title":"PolygonBody#Step","link":"<a href=\"PolygonBody.html#Step\">PolygonBody &rtrif; Step</a>"},{"title":"Shape","link":"<a href=\"Shape.html\">Shape</a>","description":"<p>Shape Component is responsible for rendering a shape to the screen.\nBasic Shapes such as circles, rectangles, etc. can be rendered using this component.</p>\n<pre class=\"prettyprint source\"><code>Shape.CIRCLE = 0;\nShape.RECTANGLE = 1;\nShape.LINE = 2;\nShape.TRIANGLE = 3;\nShape.POLYGON = 4;\n</code></pre>"},{"title":"Shape#draw","link":"<a href=\"Shape.html#draw\">Shape &rtrif; draw</a>"},{"title":"Sound","link":"<a href=\"Sound.html\">Sound</a>","description":"<p>A Sound Component is responsible for playing sounds.</p>"},{"title":"Sound#Destroy","link":"<a href=\"Sound.html#Destroy\">Sound &rtrif; Destroy</a>"},{"title":"Sound#pause","link":"<a href=\"Sound.html#pause\">Sound &rtrif; pause</a>"},{"title":"Sound#play","link":"<a href=\"Sound.html#play\">Sound &rtrif; play</a>"},{"title":"Sound#stop","link":"<a href=\"Sound.html#stop\">Sound &rtrif; stop</a>"},{"title":"Sprite","link":"<a href=\"Sprite.html\">Sprite</a>","description":"<p>A Sprite Component is responsible for rendering a sprite to the screen.\nAny Image (supported by the browser) can be used as a sprite.</p>"},{"title":"Sprite#draw","link":"<a href=\"Sprite.html#draw\">Sprite &rtrif; draw</a>"},{"title":"Text","link":"<a href=\"Text.html\">Text</a>","description":"<p>Text component allows to display text on UI elements.\nThis is a UI component, so it should be added to an entity with a UITransform component.</p>"},{"title":"Text#draw","link":"<a href=\"Text.html#draw\">Text &rtrif; draw</a>"},{"title":"Transform","link":"<a href=\"Transform.html\">Transform</a>","description":"<p>A Transform Component is responsible for the position, rotation and scale of an entity.\nEvery entity component must have a transform component. Without a transform component, the entity will not be rendered.</p>"},{"title":"Transform#Destroy","link":"<a href=\"Transform.html#Destroy\">Transform &rtrif; Destroy</a>"},{"title":"Transform#rotate","link":"<a href=\"Transform.html#rotate\">Transform &rtrif; rotate</a>"},{"title":"Transform#scale","link":"<a href=\"Transform.html#scale\">Transform &rtrif; scale</a>"},{"title":"Transform#translate","link":"<a href=\"Transform.html#translate\">Transform &rtrif; translate</a>"},{"title":"UISprite","link":"<a href=\"UISprite.html\">UISprite</a>","description":"<p>UISprite is a special Sprite class wihch is used to render Images on UI elements.\nThis is a UI component, so it should be added to an entity with a UITransform component.</p>"},{"title":"UISprite#draw","link":"<a href=\"UISprite.html#draw\">UISprite &rtrif; draw</a>"},{"title":"UITransform","link":"<a href=\"UITransform.html\">UITransform</a>","description":"<p>UI Transform Component is responsible for the position, rotation and width and height of a UI element.\nEvery UI element must have a transform component. Without a transform component, the UI element will not be rendered.\nNote Scale is not supported for UI elements.\nThus normal Transform Component cannot be used for UI elements, as it has scale instead of width and height.\nAll the UI Rendering is done with pixels, so the position and width and height are in pixels.\nPosition vector is replaced by x and y.</p>"},{"title":"UITransform#align","link":"<a href=\"UITransform.html#align\">UITransform &rtrif; align</a>"},{"title":"UITransform#Destroy","link":"<a href=\"UITransform.html#Destroy\">UITransform &rtrif; Destroy</a>"},{"title":"UITransform#fill","link":"<a href=\"UITransform.html#fill\">UITransform &rtrif; fill</a>"},{"title":"UITransform#isClicked","link":"<a href=\"UITransform.html#isClicked\">UITransform &rtrif; isClicked</a>"},{"title":"UITransform#isHovered","link":"<a href=\"UITransform.html#isHovered\">UITransform &rtrif; isHovered</a>"},{"title":"VBoxContainer","link":"<a href=\"VBoxContainer.html\">VBoxContainer</a>","description":"<p>VerticalBoxContainer or VBoxContainer is a container that arranges its children vertically.</p>"},{"title":"VBoxContainer#Destroy","link":"<a href=\"VBoxContainer.html#Destroy\">VBoxContainer &rtrif; Destroy</a>"},{"title":"VBoxContainer#update","link":"<a href=\"VBoxContainer.html#update\">VBoxContainer &rtrif; update</a>"},{"title":"Vector2","link":"<a href=\"Vector2.html\">Vector2</a>","description":"<p>A 2 dimensional vector. This class uses traditional Vector Math.</p>"},{"title":"Vector2#add","link":"<a href=\"Vector2.html#add\">Vector2 &rtrif; add</a>"},{"title":"Vector2#copy","link":"<a href=\"Vector2.html#copy\">Vector2 &rtrif; copy</a>"},{"title":"Vector2#divide","link":"<a href=\"Vector2.html#divide\">Vector2 &rtrif; divide</a>"},{"title":"Vector2#magnitude","link":"<a href=\"Vector2.html#magnitude\">Vector2 &rtrif; magnitude</a>"},{"title":"Vector2#multiply","link":"<a href=\"Vector2.html#multiply\">Vector2 &rtrif; multiply</a>"},{"title":"Vector2#negetive","link":"<a href=\"Vector2.html#negetive\">Vector2 &rtrif; negetive</a>"},{"title":"Vector2#normalize","link":"<a href=\"Vector2.html#normalize\">Vector2 &rtrif; normalize</a>"},{"title":"Vector2#subtract","link":"<a href=\"Vector2.html#subtract\">Vector2 &rtrif; subtract</a>"},{"title":"Vector2.isSafe","link":"<a href=\"Vector2.html#.isSafe\">Vector2 &rtrif; isSafe</a>"},{"title":"Vector2.one","link":"<a href=\"Vector2.html#.one\">Vector2 &rtrif; one</a>"},{"title":"Vector2.transform","link":"<a href=\"Vector2.html#.transform\">Vector2 &rtrif; transform</a>"},{"title":"Vector2.zero","link":"<a href=\"Vector2.html#.zero\">Vector2 &rtrif; zero</a>"},{"title":"Body","link":"<a href=\"Body.html\">Body</a>"},{"title":"Body#addForce","link":"<a href=\"Body.html#addForce\">Body &rtrif; addForce</a>","description":"<p>Body is the base class for all the bodies in the physics engine.\nBody class extends the Transform class, thus it has all the properties of the Transform class.\nNo need of a seconaary transform class.\nThis class is used by the physics engine to calculate the position and rotation of the rigid bodies.\nInstead of using this class directly, use the derived classes like CircleBody, PolygonBody, etc.</p>"},{"title":"Body#addImpulse","link":"<a href=\"Body.html#addImpulse\">Body &rtrif; addImpulse</a>","description":"<p>Body is the base class for all the bodies in the physics engine.\nBody class extends the Transform class, thus it has all the properties of the Transform class.\nNo need of a seconaary transform class.\nThis class is used by the physics engine to calculate the position and rotation of the rigid bodies.\nInstead of using this class directly, use the derived classes like CircleBody, PolygonBody, etc.</p>"},{"title":"Body#addTorque","link":"<a href=\"Body.html#addTorque\">Body &rtrif; addTorque</a>","description":"<p>Body is the base class for all the bodies in the physics engine.\nBody class extends the Transform class, thus it has all the properties of the Transform class.\nNo need of a seconaary transform class.\nThis class is used by the physics engine to calculate the position and rotation of the rigid bodies.\nInstead of using this class directly, use the derived classes like CircleBody, PolygonBody, etc.</p>"},{"title":"Body#addTorqueImpulse","link":"<a href=\"Body.html#addTorqueImpulse\">Body &rtrif; addTorqueImpulse</a>","description":"<p>Body is the base class for all the bodies in the physics engine.\nBody class extends the Transform class, thus it has all the properties of the Transform class.\nNo need of a seconaary transform class.\nThis class is used by the physics engine to calculate the position and rotation of the rigid bodies.\nInstead of using this class directly, use the derived classes like CircleBody, PolygonBody, etc.</p>"},{"title":"Body#Destroy","link":"<a href=\"Body.html#Destroy\">Body &rtrif; Destroy</a>","description":"<p>Body is the base class for all the bodies in the physics engine.\nBody class extends the Transform class, thus it has all the properties of the Transform class.\nNo need of a seconaary transform class.\nThis class is used by the physics engine to calculate the position and rotation of the rigid bodies.\nInstead of using this class directly, use the derived classes like CircleBody, PolygonBody, etc.</p>"},{"title":"Body#getAABB","link":"<a href=\"Body.html#getAABB\">Body &rtrif; getAABB</a>","description":"<p>Body is the base class for all the bodies in the physics engine.\nBody class extends the Transform class, thus it has all the properties of the Transform class.\nNo need of a seconaary transform class.\nThis class is used by the physics engine to calculate the position and rotation of the rigid bodies.\nInstead of using this class directly, use the derived classes like CircleBody, PolygonBody, etc.</p>"},{"title":"Body#getTransformedVertices","link":"<a href=\"Body.html#getTransformedVertices\">Body &rtrif; getTransformedVertices</a>","description":"<p>Body is the base class for all the bodies in the physics engine.\nBody class extends the Transform class, thus it has all the properties of the Transform class.\nNo need of a seconaary transform class.\nThis class is used by the physics engine to calculate the position and rotation of the rigid bodies.\nInstead of using this class directly, use the derived classes like CircleBody, PolygonBody, etc.</p>"},{"title":"Body#move","link":"<a href=\"Body.html#move\">Body &rtrif; move</a>","description":"<p>Body is the base class for all the bodies in the physics engine.\nBody class extends the Transform class, thus it has all the properties of the Transform class.\nNo need of a seconaary transform class.\nThis class is used by the physics engine to calculate the position and rotation of the rigid bodies.\nInstead of using this class directly, use the derived classes like CircleBody, PolygonBody, etc.</p>"},{"title":"Body#moveAt","link":"<a href=\"Body.html#moveAt\">Body &rtrif; moveAt</a>","description":"<p>Body is the base class for all the bodies in the physics engine.\nBody class extends the Transform class, thus it has all the properties of the Transform class.\nNo need of a seconaary transform class.\nThis class is used by the physics engine to calculate the position and rotation of the rigid bodies.\nInstead of using this class directly, use the derived classes like CircleBody, PolygonBody, etc.</p>"},{"title":"Body#moveTowards","link":"<a href=\"Body.html#moveTowards\">Body &rtrif; moveTowards</a>","description":"<p>Body is the base class for all the bodies in the physics engine.\nBody class extends the Transform class, thus it has all the properties of the Transform class.\nNo need of a seconaary transform class.\nThis class is used by the physics engine to calculate the position and rotation of the rigid bodies.\nInstead of using this class directly, use the derived classes like CircleBody, PolygonBody, etc.</p>"},{"title":"Body#rotate","link":"<a href=\"Body.html#rotate\">Body &rtrif; rotate</a>","description":"<p>Body is the base class for all the bodies in the physics engine.\nBody class extends the Transform class, thus it has all the properties of the Transform class.\nNo need of a seconaary transform class.\nThis class is used by the physics engine to calculate the position and rotation of the rigid bodies.\nInstead of using this class directly, use the derived classes like CircleBody, PolygonBody, etc.</p>"},{"title":"Body#rotateAt","link":"<a href=\"Body.html#rotateAt\">Body &rtrif; rotateAt</a>","description":"<p>Body is the base class for all the bodies in the physics engine.\nBody class extends the Transform class, thus it has all the properties of the Transform class.\nNo need of a seconaary transform class.\nThis class is used by the physics engine to calculate the position and rotation of the rigid bodies.\nInstead of using this class directly, use the derived classes like CircleBody, PolygonBody, etc.</p>"},{"title":"Body#rotateTowards","link":"<a href=\"Body.html#rotateTowards\">Body &rtrif; rotateTowards</a>","description":"<p>Body is the base class for all the bodies in the physics engine.\nBody class extends the Transform class, thus it has all the properties of the Transform class.\nNo need of a seconaary transform class.\nThis class is used by the physics engine to calculate the position and rotation of the rigid bodies.\nInstead of using this class directly, use the derived classes like CircleBody, PolygonBody, etc.</p>"},{"title":"Body#Step","link":"<a href=\"Body.html#Step\">Body &rtrif; Step</a>","description":"<p>Body is the base class for all the bodies in the physics engine.\nBody class extends the Transform class, thus it has all the properties of the Transform class.\nNo need of a seconaary transform class.\nThis class is used by the physics engine to calculate the position and rotation of the rigid bodies.\nInstead of using this class directly, use the derived classes like CircleBody, PolygonBody, etc.</p>"},{"title":"Body#translate","link":"<a href=\"Body.html#translate\">Body &rtrif; translate</a>","description":"<p>Body is the base class for all the bodies in the physics engine.\nBody class extends the Transform class, thus it has all the properties of the Transform class.\nNo need of a seconaary transform class.\nThis class is used by the physics engine to calculate the position and rotation of the rigid bodies.\nInstead of using this class directly, use the derived classes like CircleBody, PolygonBody, etc.</p>"},{"title":"Component","link":"<a href=\"Component.html\">Component</a>","description":"<p>A component is a special type of object that can be attached to a entity.\nComponents are used to add functionality to entities.\nEvery component is unique and can only be attached to one entity at a time.\nA component describes the behaviour of a game object, and is not a entity itself.</p>"},{"title":"Component#Destroy","link":"<a href=\"Component.html#Destroy\">Component &rtrif; Destroy</a>"},{"title":"Container","link":"<a href=\"Container.html\">Container</a>","description":"<p>Containers is a base class for all UI Containers.\nThis class should not be used directly.\nInstead, use one of the derived classes. MarginContainer, GridContainer, etc.</p>"},{"title":"Container#Destroy","link":"<a href=\"Container.html#Destroy\">Container &rtrif; Destroy</a>"},{"title":"Container#update","link":"<a href=\"Container.html#update\">Container &rtrif; update</a>"},{"title":"Renderable","link":"<a href=\"Renderable.html\">Renderable</a>","description":"<p>Donot use this class directly. Use Inheritance instead.\nThis is a base class for all components that can be rendered, such as sprites, text, etc.\nThese components are identified by the renderer and rendered accordingly.\nRenderables are components that can be rendered to the screen.\nEvery renderable inherits from this class.</p>"},{"title":"Renderable#Destroy","link":"<a href=\"Renderable.html#Destroy\">Renderable &rtrif; Destroy</a>"},{"title":"Renderable#draw","link":"<a href=\"Renderable.html#draw\">Renderable &rtrif; draw</a>"}]}