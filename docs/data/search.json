{"list":[{"title":"Application","link":"<a href=\"Application.html\">Application</a>","description":"<p>The main class of the engine. Inherit from this class to create your own game.</p>"},{"title":"Behaviour","link":"<a href=\"Behaviour_Behaviour.html\">Behaviour</a>","description":"<p>Creates a new Behaviour</p>"},{"title":"Color","link":"<a href=\"Color.html\">Color</a>"},{"title":"Color.FromHex","link":"<a href=\"Color.html#.FromHex\">Color &rtrif; FromHex</a>"},{"title":"Color.FromHSL","link":"<a href=\"Color.html#.FromHSL\">Color &rtrif; FromHSL</a>"},{"title":"Color.FromRGB","link":"<a href=\"Color.html#.FromRGB\">Color &rtrif; FromRGB</a>"},{"title":"Color.FromRGBA","link":"<a href=\"Color.html#.FromRGBA\">Color &rtrif; FromRGBA</a>"},{"title":"Color.Random","link":"<a href=\"Color.html#.Random\">Color &rtrif; Random</a>"},{"title":"Color#toString","link":"<a href=\"Color.html#toString\">Color &rtrif; toString</a>"},{"title":"DestroyQueue","link":"<a href=\"DestroyQueue.html\">DestroyQueue</a>"},{"title":"DestroyQueue.Add","link":"<a href=\"DestroyQueue.html#.Add\">DestroyQueue &rtrif; Add</a>","description":"<p>A queue of entities to be destroyed.\nThis is used to prevent entities from being destroyed while they are being iterated over.</p>"},{"title":"Entity","link":"<a href=\"Entity.html\">Entity</a>","description":"<p>An entity is a game object.\nAll the Objects in the game are entities.\nEntities can have components attached to them.\nEntities can have children entities, which can be used to create a hierarchy of entities.</p>"},{"title":"Entity#AddChild","link":"<a href=\"Entity.html#AddChild\">Entity &rtrif; AddChild</a>"},{"title":"Entity#AddChildren","link":"<a href=\"Entity.html#AddChildren\">Entity &rtrif; AddChildren</a>"},{"title":"Entity#AddComponent","link":"<a href=\"Entity.html#AddComponent\">Entity &rtrif; AddComponent</a>"},{"title":"Entity#GetChildren","link":"<a href=\"Entity.html#GetChildren\">Entity &rtrif; GetChildren</a>"},{"title":"Entity#GetChildWithComponent","link":"<a href=\"Entity.html#GetChildWithComponent\">Entity &rtrif; GetChildWithComponent</a>"},{"title":"Entity#GetComponent","link":"<a href=\"Entity.html#GetComponent\">Entity &rtrif; GetComponent</a>"},{"title":"Entity#GetComponentsInChildren","link":"<a href=\"Entity.html#GetComponentsInChildren\">Entity &rtrif; GetComponentsInChildren</a>"},{"title":"Entity#GetParent","link":"<a href=\"Entity.html#GetParent\">Entity &rtrif; GetParent</a>"},{"title":"Entity#GetTree","link":"<a href=\"Entity.html#GetTree\">Entity &rtrif; GetTree</a>"},{"title":"Entity#HasComponent","link":"<a href=\"Entity.html#HasComponent\">Entity &rtrif; HasComponent</a>"},{"title":"Entity#RemoveComponent","link":"<a href=\"Entity.html#RemoveComponent\">Entity &rtrif; RemoveComponent</a>"},{"title":"Filter","link":"<a href=\"Filter.html\">Filter</a>","description":"<p>A class representing a filter.</p>"},{"title":"Filter#Add","link":"<a href=\"Filter.html#Add\">Filter &rtrif; Add</a>","description":"<p>A class representing a filter.</p>"},{"title":"Filter#Remove","link":"<a href=\"Filter.html#Remove\">Filter &rtrif; Remove</a>","description":"<p>A class representing a filter.</p>"},{"title":"Filter#toString","link":"<a href=\"Filter.html#toString\">Filter &rtrif; toString</a>","description":"<p>A class representing a filter.</p>"},{"title":"Font","link":"<a href=\"Font.html\">Font</a>","description":"<p>A Font class to store font information.</p>"},{"title":"Font#toString","link":"<a href=\"Font.html#toString\">Font &rtrif; toString</a>"},{"title":"GridContainer","link":"<a href=\"GridContainer.html\">GridContainer</a>","description":"<p>GridContainer is a container that arranges its children in a grid.</p>"},{"title":"GridContainer#Update","link":"<a href=\"GridContainer.html#Update\">GridContainer &rtrif; Update</a>"},{"title":"HBoxContainer","link":"<a href=\"HBoxContainer.html\">HBoxContainer</a>","description":"<p>Horizontal Box Container or HBoxContainer is a container that arranges its children horizontally.</p>"},{"title":"HBoxContainer#Update","link":"<a href=\"HBoxContainer.html#Update\">HBoxContainer &rtrif; Update</a>"},{"title":"KeyboardInput","link":"<a href=\"KeyboardInput.html\">KeyboardInput</a>"},{"title":"KeyboardInput.GetSpecialKeyPressed","link":"<a href=\"KeyboardInput.html#.GetSpecialKeyPressed\">KeyboardInput &rtrif; GetSpecialKeyPressed</a>","description":"<p>KeyboardInput class to handle keyboard input</p>"},{"title":"KeyboardInput.IsKeyDown","link":"<a href=\"KeyboardInput.html#.IsKeyDown\">KeyboardInput &rtrif; IsKeyDown</a>","description":"<p>KeyboardInput class to handle keyboard input</p>"},{"title":"MarginContainer","link":"<a href=\"MarginContainer.html\">MarginContainer</a>","description":"<p>MarginContainer is a container that arranges its children with margins.\nNote: The margins are added to this container's UITransform component.</p>"},{"title":"MarginContainer#Update","link":"<a href=\"MarginContainer.html#Update\">MarginContainer &rtrif; Update</a>"},{"title":"Maths","link":"<a href=\"Maths.html\">Maths</a>","description":"<p>A Math class containing useful math functions.\nThis class contains all the Mathamatical functions used by the engine.\nThis class is static and should not be instantiated.</p>"},{"title":"Maths.Clamp","link":"<a href=\"Maths.html#.Clamp\">Maths &rtrif; Clamp</a>"},{"title":"Maths.Cross","link":"<a href=\"Maths.html#.Cross\">Maths &rtrif; Cross</a>"},{"title":"Maths.Distance","link":"<a href=\"Maths.html#.Distance\">Maths &rtrif; Distance</a>"},{"title":"Maths.DistanceSq","link":"<a href=\"Maths.html#.DistanceSq\">Maths &rtrif; DistanceSq</a>"},{"title":"Maths.Dot","link":"<a href=\"Maths.html#.Dot\">Maths &rtrif; Dot</a>"},{"title":"Maths.Lenght","link":"<a href=\"Maths.html#.Lenght\">Maths &rtrif; Lenght</a>"},{"title":"Maths.LenghtSq","link":"<a href=\"Maths.html#.LenghtSq\">Maths &rtrif; LenghtSq</a>"},{"title":"Maths.MeterToPixel","link":"<a href=\"Maths.html#.MeterToPixel\">Maths &rtrif; MeterToPixel</a>"},{"title":"Maths.MeterToPixelVector2","link":"<a href=\"Maths.html#.MeterToPixelVector2\">Maths &rtrif; MeterToPixelVector2</a>"},{"title":"Maths.NearlyEqual","link":"<a href=\"Maths.html#.NearlyEqual\">Maths &rtrif; NearlyEqual</a>"},{"title":"Maths.Normalize","link":"<a href=\"Maths.html#.Normalize\">Maths &rtrif; Normalize</a>"},{"title":"Maths.Perpendicular","link":"<a href=\"Maths.html#.Perpendicular\">Maths &rtrif; Perpendicular</a>"},{"title":"Maths.PixelToMeter","link":"<a href=\"Maths.html#.PixelToMeter\">Maths &rtrif; PixelToMeter</a>"},{"title":"Maths.PixelToMeterVector2","link":"<a href=\"Maths.html#.PixelToMeterVector2\">Maths &rtrif; PixelToMeterVector2</a>"},{"title":"Maths.RandomVector2","link":"<a href=\"Maths.html#.RandomVector2\">Maths &rtrif; RandomVector2</a>"},{"title":"MouseInput","link":"<a href=\"MouseInput.html\">MouseInput</a>"},{"title":"MouseInput.GetPosition","link":"<a href=\"MouseInput.html#.GetPosition\">MouseInput &rtrif; GetPosition</a>","description":"<p>A class to handle mouse input.</p>"},{"title":"MouseInput.IsButtonDown","link":"<a href=\"MouseInput.html#.IsButtonDown\">MouseInput &rtrif; IsButtonDown</a>","description":"<p>A class to handle mouse input.</p>"},{"title":"MouseInput.IsButtonUp","link":"<a href=\"MouseInput.html#.IsButtonUp\">MouseInput &rtrif; IsButtonUp</a>","description":"<p>A class to handle mouse input.</p>"},{"title":"MouseInput.IsClicked","link":"<a href=\"MouseInput.html#.IsClicked\">MouseInput &rtrif; IsClicked</a>","description":"<p>A class to handle mouse input.</p>"},{"title":"Panel","link":"<a href=\"Panel.html\">Panel</a>","description":"<p>A flat color rectangle that can be used to display UI elements.\nThis is a UI component, so it should be added to an entity with a UITransform component.</p>"},{"title":"Scene","link":"<a href=\"Scene.html\">Scene</a>","description":"<p>Scene is a container for entities. It is used to organize the game objects in the game.\nSceneManager is used to load and unload scenes. A scene can be used to only load specific entities.\nIf any entity is not part of a scene, it will be loaded by default.</p>"},{"title":"Scene#AddChild","link":"<a href=\"Scene.html#AddChild\">Scene &rtrif; AddChild</a>"},{"title":"Scene#AddChildren","link":"<a href=\"Scene.html#AddChildren\">Scene &rtrif; AddChildren</a>"},{"title":"Scene#AddComponent","link":"<a href=\"Scene.html#AddComponent\">Scene &rtrif; AddComponent</a>"},{"title":"Scene#GetChildren","link":"<a href=\"Scene.html#GetChildren\">Scene &rtrif; GetChildren</a>"},{"title":"Scene#GetChildWithComponent","link":"<a href=\"Scene.html#GetChildWithComponent\">Scene &rtrif; GetChildWithComponent</a>"},{"title":"Scene#GetComponent","link":"<a href=\"Scene.html#GetComponent\">Scene &rtrif; GetComponent</a>"},{"title":"Scene#GetComponentsInChildren","link":"<a href=\"Scene.html#GetComponentsInChildren\">Scene &rtrif; GetComponentsInChildren</a>"},{"title":"Scene#GetParent","link":"<a href=\"Scene.html#GetParent\">Scene &rtrif; GetParent</a>"},{"title":"Scene#GetTree","link":"<a href=\"Scene.html#GetTree\">Scene &rtrif; GetTree</a>"},{"title":"Scene#HasComponent","link":"<a href=\"Scene.html#HasComponent\">Scene &rtrif; HasComponent</a>"},{"title":"Scene#RemoveComponent","link":"<a href=\"Scene.html#RemoveComponent\">Scene &rtrif; RemoveComponent</a>"},{"title":"SceneManager","link":"<a href=\"SceneManager.html\">SceneManager</a>","description":"<p>SceneManager is used to load and unload scenes. All scenes will automatically be added to SceneManager.\nOnly the first scene will be loaded by default. To load a scene, use SceneManager.LoadScene(sceneId).</p>"},{"title":"SceneManager.GetScene","link":"<a href=\"SceneManager.html#.GetScene\">SceneManager &rtrif; GetScene</a>"},{"title":"SceneManager.GetSceneByName","link":"<a href=\"SceneManager.html#.GetSceneByName\">SceneManager &rtrif; GetSceneByName</a>"},{"title":"SceneManager.LoadScene","link":"<a href=\"SceneManager.html#.LoadScene\">SceneManager &rtrif; LoadScene</a>"},{"title":"SceneManager.LoadSceneAdditive","link":"<a href=\"SceneManager.html#.LoadSceneAdditive\">SceneManager &rtrif; LoadSceneAdditive</a>"},{"title":"SceneManager.UnloadAllAdditiveScenes","link":"<a href=\"SceneManager.html#.UnloadAllAdditiveScenes\">SceneManager &rtrif; UnloadAllAdditiveScenes</a>"},{"title":"Shape","link":"<a href=\"Shape.html\">Shape</a>","description":"<p>Shape Component is responsible for rendering a shape to the screen.\nBasic Shapes such as circles, rectangles, etc. can be rendered using this component.</p>\n<pre class=\"prettyprint source\"><code>Shape.CIRCLE = 0;\nShape.RECTANGLE = 1;\nShape.LINE = 2;\nShape.TRIANGLE = 3;\nShape.POLYGON = 4;\n</code></pre>"},{"title":"Sound","link":"<a href=\"Sound.html\">Sound</a>","description":"<p>A Sound Component is responsible for playing sounds.</p>"},{"title":"Sound#Pause","link":"<a href=\"Sound.html#Pause\">Sound &rtrif; Pause</a>"},{"title":"Sound#Play","link":"<a href=\"Sound.html#Play\">Sound &rtrif; Play</a>"},{"title":"Sound#Stop","link":"<a href=\"Sound.html#Stop\">Sound &rtrif; Stop</a>"},{"title":"Sprite","link":"<a href=\"Sprite.html\">Sprite</a>","description":"<p>A Sprite Component is responsible for rendering a sprite to the screen.\nAny Image (supported by the browser) can be used as a sprite.</p>"},{"title":"Storage","link":"<a href=\"Storage.html\">Storage</a>","description":"<p>A class for storing data in the browser's local storage or session storage.</p>"},{"title":"Storage.Clear","link":"<a href=\"Storage.html#.Clear\">Storage &rtrif; Clear</a>"},{"title":"Storage.Get","link":"<a href=\"Storage.html#.Get\">Storage &rtrif; Get</a>"},{"title":"Storage.Remove","link":"<a href=\"Storage.html#.Remove\">Storage &rtrif; Remove</a>"},{"title":"Storage.Set","link":"<a href=\"Storage.html#.Set\">Storage &rtrif; Set</a>"},{"title":"Text","link":"<a href=\"Text.html\">Text</a>","description":"<p>Text component allows to display text on UI elements.\nThis is a UI component, so it should be added to an entity with a UITransform component.</p>"},{"title":"TouchInput","link":"<a href=\"TouchInput.html\">TouchInput</a>"},{"title":"TouchInput.GetTouch","link":"<a href=\"TouchInput.html#.GetTouch\">TouchInput &rtrif; GetTouch</a>","description":"<p>A class to handle touch input.</p>"},{"title":"TouchInput.GetTouchCount","link":"<a href=\"TouchInput.html#.GetTouchCount\">TouchInput &rtrif; GetTouchCount</a>","description":"<p>A class to handle touch input.</p>"},{"title":"TouchInput.IsTouchActive","link":"<a href=\"TouchInput.html#.IsTouchActive\">TouchInput &rtrif; IsTouchActive</a>","description":"<p>A class to handle touch input.</p>"},{"title":"Transform","link":"<a href=\"Transform.html\">Transform</a>","description":"<p>A Transform Component is responsible for the position, rotation and scale of an entity.\nEvery entity component must have a transform component. Without a transform component, the entity will not be rendered.</p>"},{"title":"Transform#Align","link":"<a href=\"Transform.html#Align\">Transform &rtrif; Align</a>"},{"title":"Transform#Fill","link":"<a href=\"Transform.html#Fill\">Transform &rtrif; Fill</a>"},{"title":"Transform#GetForward","link":"<a href=\"Transform.html#GetForward\">Transform &rtrif; GetForward</a>"},{"title":"Transform#IsClicked","link":"<a href=\"Transform.html#IsClicked\">Transform &rtrif; IsClicked</a>"},{"title":"Transform#IsHovered","link":"<a href=\"Transform.html#IsHovered\">Transform &rtrif; IsHovered</a>"},{"title":"Transform#Rotate","link":"<a href=\"Transform.html#Rotate\">Transform &rtrif; Rotate</a>"},{"title":"Transform#Scale","link":"<a href=\"Transform.html#Scale\">Transform &rtrif; Scale</a>"},{"title":"Transform#Translate","link":"<a href=\"Transform.html#Translate\">Transform &rtrif; Translate</a>"},{"title":"UISprite","link":"<a href=\"UISprite.html\">UISprite</a>","description":"<p>UISprite is a special Sprite class wihch is used to render Images on UI elements.\nThis is a UI component, so it should be added to an entity with a UITransform component.</p>"},{"title":"UITransform","link":"<a href=\"UITransform.html\">UITransform</a>","description":"<p>UI Transform Component is responsible for the position, rotation and width and height of a UI element.\nEvery UI element must have a transform component. Without a transform component, the UI element will not be rendered.\nNote Scale is not supported for UI elements.\nThus normal Transform Component cannot be used for UI elements, as it has scale instead of width and height.\nAll the UI Rendering is done with pixels, so the position and width and height are in pixels.\nPosition vector is replaced by x and y.</p>"},{"title":"VBoxContainer","link":"<a href=\"VBoxContainer.html\">VBoxContainer</a>","description":"<p>VerticalBoxContainer or VBoxContainer is a container that arranges its children vertically.</p>"},{"title":"VBoxContainer#Update","link":"<a href=\"VBoxContainer.html#Update\">VBoxContainer &rtrif; Update</a>"},{"title":"Vector2","link":"<a href=\"Vector2.html\">Vector2</a>","description":"<p>A 2 dimensional vector. This class uses traditional Vector Math.</p>"},{"title":"Vector2#Add","link":"<a href=\"Vector2.html#Add\">Vector2 &rtrif; Add</a>"},{"title":"Vector2#Copy","link":"<a href=\"Vector2.html#Copy\">Vector2 &rtrif; Copy</a>"},{"title":"Vector2#Divide","link":"<a href=\"Vector2.html#Divide\">Vector2 &rtrif; Divide</a>"},{"title":"Vector2#Magnitude","link":"<a href=\"Vector2.html#Magnitude\">Vector2 &rtrif; Magnitude</a>"},{"title":"Vector2#Multiply","link":"<a href=\"Vector2.html#Multiply\">Vector2 &rtrif; Multiply</a>"},{"title":"Vector2#Negetive","link":"<a href=\"Vector2.html#Negetive\">Vector2 &rtrif; Negetive</a>"},{"title":"Vector2#Normalize","link":"<a href=\"Vector2.html#Normalize\">Vector2 &rtrif; Normalize</a>"},{"title":"Vector2#Subtract","link":"<a href=\"Vector2.html#Subtract\">Vector2 &rtrif; Subtract</a>"},{"title":"Vector2.IsSafe","link":"<a href=\"Vector2.html#.IsSafe\">Vector2 &rtrif; IsSafe</a>"},{"title":"Vector2.One","link":"<a href=\"Vector2.html#.One\">Vector2 &rtrif; One</a>"},{"title":"Vector2.Zero","link":"<a href=\"Vector2.html#.Zero\">Vector2 &rtrif; Zero</a>"},{"title":"00-Getting Started","link":"<a href=\"tutorial-00-Getting Started.html\">Getting started</a>"},{"title":"01-Introduction","link":"<a href=\"tutorial-01-Introduction.html\">Introduction</a>"},{"title":"02-Step by step","link":"<a href=\"tutorial-02-Step by step.html\">Step by step</a>"},{"title":"03-Systems","link":"<a href=\"tutorial-03-Systems.html\">Systems and Managers</a>"},{"title":"04-Multiple Scenes","link":"<a href=\"tutorial-04-Multiple Scenes.html\">Multiple Scenes</a>"},{"title":"05-Inputs","link":"<a href=\"tutorial-05-Inputs.html\">Inputs</a>"},{"title":"06-Scripts","link":"<a href=\"tutorial-06-Scripts.html\">Scripts</a>"},{"title":"07-Beyond","link":"<a href=\"tutorial-07-Beyond.html\">Beyond the basics</a>"},{"title":"Behaviour","link":"<a href=\"Behaviour.html\">Behaviour</a>","description":"<p>A Behaviour is a Script that is attached to an Entity.\nA Behaviour is a Component thus, making possible to make new/custom Components.</p>"},{"title":"Component","link":"<a href=\"Component.html\">Component</a>","description":"<p>A component is a special type of object that can be attached to a entity.\nComponents are used to add functionality to entities.\nEvery component is unique and can only be attached to one entity at a time.\nA component describes the behaviour of a game object, and is not a entity itself.</p>"},{"title":"Container","link":"<a href=\"Container.html\">Container</a>","description":"<p>Containers is a base class for all UI Containers.\nThis class should not be used directly.\nInstead, use one of the derived classes. MarginContainer, GridContainer, etc.</p>"},{"title":"Container#Update","link":"<a href=\"Container.html#Update\">Container &rtrif; Update</a>"},{"title":"Global","link":"<a href=\"Global_.html\">Global</a>","description":"<p>A Global is a Script that is attached to the global scope. (window)\nA Global allows to create and access global variables.</p>"},{"title":"Renderable","link":"<a href=\"Renderable.html\">Renderable</a>","description":"<p>Donot use this class directly. Use Inheritance instead.\nThis is a base class for all components that can be rendered, such as sprites, text, etc.\nThese components are identified by the renderer and rendered accordingly.\nRenderables are components that can be rendered to the screen.\nEvery renderable inherits from this class.</p>"}]}